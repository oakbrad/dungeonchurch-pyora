name: Validate 5eTools Homebrew JSON

on:
  push:
    paths:
      - '**.json'
  pull_request:
    paths:
      - '**.json'

jobs:
  validate-json:
    name: Validate JSON against 5etools schema
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Validate JSON files
      id: validate
      run: |
        echo "Validating JSON files against 5etools schema..."
        # Find all JSON files in the repository
        JSON_FILES=$(find . -name "*.json" -type f | grep -v "node_modules" | sort)
        
        # Initialize error flag
        HAS_ERRORS=0
        
        # Create a temporary validation script
        cat > validate_json.js << 'EOF'
        const { execSync } = require('child_process');
        const fs = require('fs');
        
        // Get the filename from command line argument
        const filename = process.argv[2];
        
        if (!fs.existsSync(filename)) {
          console.error(`Error: File does not exist: ${filename}`);
          process.exit(1);
        }
        
        try {
          console.log(`Validating file: "${filename}"...`);
          execSync(`npx --package=5etools-utils -- test-json-brew "${filename}"`, {
            stdio: 'inherit'
          });
          console.log(`Successfully validated: ${filename}`);
        } catch (error) {
          console.error(`Error validating: ${filename}`);
          process.exit(1);
        }
        EOF
        
        # Validate each JSON file using the Node.js script
        for file in $JSON_FILES; do
          node validate_json.js "$file" || HAS_ERRORS=1
        done
        
        # Clean up
        rm validate_json.js
        
        # Exit with error if any validation failed
        if [ $HAS_ERRORS -eq 1 ]; then
          echo "::error::JSON validation failed!"
          exit 1
        else
          echo "All JSON files validated successfully!"
        fi

    outputs:
      validation_success: ${{ steps.validate.outcome == 'success' }}

  update-brew:
    name: Update Pyora Homebrew
    needs: validate-json
    if: ${{ needs.validate-json.outputs.validation_success == 'true' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: SSH to run script on remote server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: sudo /home/ubuntu/5etools-homebrew/getbrew.sh

